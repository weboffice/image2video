#!/bin/bash

# Script de gerenciamento do ambiente de produ√ß√£o Image2Video
# Menu interativo para build, iniciar, parar e verificar status de produ√ß√£o

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
PURPLE='\033[0;35m'
NC='\033[0m' # No Color

# Fun√ß√£o para mostrar o cabe√ßalho
show_header() {
    clear
    echo -e "${CYAN}"
    echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
    echo "‚ïë                IMAGE2VIDEO PRODUCTION MANAGER               ‚ïë"
    echo "‚ïë              Gerenciador de Produ√ß√£o                        ‚ïë"
    echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
    echo -e "${NC}"
    echo ""
}

# Fun√ß√£o para mostrar o menu principal
show_menu() {
    echo -e "${BLUE}üìã Escolha uma op√ß√£o:${NC}"
    echo ""
    echo -e "${PURPLE}1)${NC} üèóÔ∏è  Fazer build de produ√ß√£o"
    echo -e "${GREEN}2)${NC} üöÄ Iniciar ambiente de produ√ß√£o"
    echo -e "${RED}3)${NC} üõë Parar ambiente de produ√ß√£o"
    echo -e "${YELLOW}4)${NC} üìä Verificar status de produ√ß√£o"
    echo -e "${PURPLE}5)${NC} üìù Ver logs de produ√ß√£o"
    echo -e "${CYAN}6)${NC} üîß Comandos √∫teis de produ√ß√£o"
    echo -e "${BLUE}7)${NC} ‚ÑπÔ∏è  Informa√ß√µes de produ√ß√£o"
    echo -e "${YELLOW}8)${NC} üîÑ Alternar para desenvolvimento"
    echo -e "${RED}0)${NC} üö™ Sair"
    echo ""
    echo -n -e "${YELLOW}Digite sua escolha [0-8]: ${NC}"
}

# Fun√ß√£o para fazer build
build_production() {
    show_header
    echo -e "${PURPLE}üèóÔ∏è  Fazendo build de produ√ß√£o...${NC}"
    echo ""
    SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
    "$SCRIPT_DIR/build-prod.sh"
    echo ""
    echo -e "${YELLOW}Pressione Enter para continuar...${NC}"
    read
}

# Fun√ß√£o para iniciar o ambiente
start_production() {
    show_header
    echo -e "${GREEN}üöÄ Iniciando ambiente de produ√ß√£o...${NC}"
    echo ""
    SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
    "$SCRIPT_DIR/start-prod.sh"
    echo ""
    echo -e "${YELLOW}Pressione Enter para continuar...${NC}"
    read
}

# Fun√ß√£o para parar o ambiente
stop_production() {
    show_header
    echo -e "${RED}üõë Parando ambiente de produ√ß√£o...${NC}"
    echo ""
    SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
    "$SCRIPT_DIR/stop-prod.sh"
    echo ""
    echo -e "${YELLOW}Pressione Enter para continuar...${NC}"
    read
}

# Fun√ß√£o para verificar status
check_production_status() {
    show_header
    echo -e "${BLUE}üìä Verificando status de produ√ß√£o...${NC}"
    echo ""
    SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
    "$SCRIPT_DIR/status-prod.sh"
    echo ""
    echo -e "${YELLOW}Pressione Enter para continuar...${NC}"
    read
}

# Fun√ß√£o para mostrar logs em tempo real
show_production_logs() {
    show_header
    echo -e "${PURPLE}üìù Logs de produ√ß√£o em tempo real${NC}"
    echo ""
    echo -e "${BLUE}Escolha qual log visualizar:${NC}"
    echo ""
    echo -e "${GREEN}1)${NC} Backend log (produ√ß√£o)"
    echo -e "${GREEN}2)${NC} Frontend log (produ√ß√£o)"
    echo -e "${GREEN}3)${NC} Ambos os logs (split screen)"
    echo -e "${YELLOW}4)${NC} Logs arquivados"
    echo -e "${RED}0)${NC} Voltar ao menu principal"
    echo ""
    echo -n -e "${YELLOW}Digite sua escolha [0-4]: ${NC}"
    
    read log_choice
    
    case $log_choice in
        1)
            SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
            if [ -f "$SCRIPT_DIR/backend-prod.log" ]; then
                echo -e "${GREEN}Monitorando backend log de produ√ß√£o (Ctrl+C para sair)...${NC}"
                echo ""
                tail -f "$SCRIPT_DIR/backend-prod.log"
            else
                echo -e "${RED}‚ùå Log do backend de produ√ß√£o n√£o encontrado${NC}"
                echo -e "${YELLOW}Pressione Enter para continuar...${NC}"
                read
            fi
            ;;
        2)
            SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
            if [ -f "$SCRIPT_DIR/frontend-prod.log" ]; then
                echo -e "${GREEN}Monitorando frontend log de produ√ß√£o (Ctrl+C para sair)...${NC}"
                echo ""
                tail -f "$SCRIPT_DIR/frontend-prod.log"
            else
                echo -e "${RED}‚ùå Log do frontend de produ√ß√£o n√£o encontrado${NC}"
                echo -e "${YELLOW}Pressione Enter para continuar...${NC}"
                read
            fi
            ;;
        3)
            SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
            if [ -f "$SCRIPT_DIR/backend-prod.log" ] && [ -f "$SCRIPT_DIR/frontend-prod.log" ]; then
                echo -e "${GREEN}Monitorando ambos os logs de produ√ß√£o (Ctrl+C para sair)...${NC}"
                echo ""
                if command -v multitail &> /dev/null; then
                    multitail "$SCRIPT_DIR/backend-prod.log" "$SCRIPT_DIR/frontend-prod.log"
                else
                    echo -e "${YELLOW}Usando tail simples (instale multitail para melhor experi√™ncia)${NC}"
                    tail -f "$SCRIPT_DIR/backend-prod.log" "$SCRIPT_DIR/frontend-prod.log"
                fi
            else
                echo -e "${RED}‚ùå Um ou ambos os logs de produ√ß√£o n√£o foram encontrados${NC}"
                echo -e "${YELLOW}Pressione Enter para continuar...${NC}"
                read
            fi
            ;;
        4)
            show_archived_logs
            ;;
        0)
            return
            ;;
        *)
            echo -e "${RED}‚ùå Op√ß√£o inv√°lida${NC}"
            echo -e "${YELLOW}Pressione Enter para continuar...${NC}"
            read
            ;;
    esac
}

# Fun√ß√£o para mostrar logs arquivados
show_archived_logs() {
    echo -e "${BLUE}üìÅ Logs arquivados de produ√ß√£o:${NC}"
    echo ""
    
    SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
    if [ -d "$SCRIPT_DIR/logs/archive" ]; then
        echo -e "${GREEN}Backend logs:${NC}"
        ls -la "$SCRIPT_DIR/logs/archive"/backend-prod_*.log 2>/dev/null | while read line; do
            echo "   $line"
        done
        
        echo ""
        echo -e "${GREEN}Frontend logs:${NC}"
        ls -la "$SCRIPT_DIR/logs/archive"/frontend-prod_*.log 2>/dev/null | while read line; do
            echo "   $line"
        done
        
        echo ""
        echo -e "${YELLOW}Para ver um log espec√≠fico:${NC}"
        echo -e "${YELLOW}   less $SCRIPT_DIR/logs/archive/[nome_do_arquivo]${NC}"
    else
        echo -e "${YELLOW}Nenhum log arquivado encontrado${NC}"
    fi
    
    echo ""
    echo -e "${YELLOW}Pressione Enter para continuar...${NC}"
    read
}

# Fun√ß√£o para mostrar comandos √∫teis
show_useful_commands() {
    show_header
    echo -e "${CYAN}üîß Comandos √∫teis de produ√ß√£o do Image2Video${NC}"
    echo ""
    SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
    echo -e "${BLUE}üìã Scripts de produ√ß√£o:${NC}"
    echo -e "   ${PURPLE}$SCRIPT_DIR/build-prod.sh${NC}     - Fazer build de produ√ß√£o"
    echo -e "   ${GREEN}$SCRIPT_DIR/start-prod.sh${NC}     - Iniciar produ√ß√£o"
    echo -e "   ${RED}$SCRIPT_DIR/stop-prod.sh${NC}      - Parar produ√ß√£o"
    echo -e "   ${YELLOW}$SCRIPT_DIR/status-prod.sh${NC}    - Status de produ√ß√£o"
    echo -e "   ${PURPLE}$SCRIPT_DIR/prod-manager.sh${NC}   - Este menu"
    echo ""
    echo -e "${BLUE}üåê URLs de produ√ß√£o:${NC}"
    echo -e "   ${GREEN}Frontend:${NC}  http://localhost:3000"
    echo -e "   ${GREEN}Backend:${NC}   http://localhost:8080"
    echo -e "   ${GREEN}API Docs:${NC}  http://localhost:8080/docs"
    echo ""
    echo -e "${BLUE}üìù Comandos de log de produ√ß√£o:${NC}"
    echo -e "   ${YELLOW}tail -f $SCRIPT_DIR/backend-prod.log${NC}   - Log do backend"
    echo -e "   ${YELLOW}tail -f $SCRIPT_DIR/frontend-prod.log${NC}  - Log do frontend"
    echo -e "   ${YELLOW}ls $SCRIPT_DIR/logs/archive/${NC}           - Logs arquivados"
    echo ""
    echo -e "${BLUE}üîç Comandos de debug de produ√ß√£o:${NC}"
    echo -e "   ${YELLOW}lsof -i:8080${NC}                           - Verificar porta backend"
    echo -e "   ${YELLOW}lsof -i:3000${NC}                           - Verificar porta frontend"
    echo -e "   ${YELLOW}ps aux | grep 'main.py'${NC}                - Processos backend"
    echo -e "   ${YELLOW}ps aux | grep 'http.server'${NC}            - Processos frontend"
    echo ""
    echo -e "${BLUE}üìÅ Diret√≥rios de produ√ß√£o:${NC}"
    echo -e "   ${CYAN}Build:${NC}    $SCRIPT_DIR/../../build/"
    echo -e "   ${CYAN}Backend:${NC}  $SCRIPT_DIR/../../build/backend/"
    echo -e "   ${CYAN}Frontend:${NC} $SCRIPT_DIR/../../build/frontend/"
    echo -e "   ${CYAN}Logs:${NC}     $SCRIPT_DIR/logs/archive/"
    echo ""
    echo -e "${BLUE}üèóÔ∏è  Comandos de build:${NC}"
    echo -e "   ${YELLOW}cd $SCRIPT_DIR/frontend && npm run build${NC}"
    echo -e "   ${YELLOW}du -sh $SCRIPT_DIR/../../build${NC}          - Tamanho do build"
    echo -e "   ${YELLOW}find $SCRIPT_DIR/../../build -name '*.log'${NC} - Encontrar logs"
    echo ""
    echo -e "${YELLOW}Pressione Enter para continuar...${NC}"
    read
}

# Fun√ß√£o para mostrar informa√ß√µes de produ√ß√£o
show_production_info() {
    show_header
    echo -e "${CYAN}‚ÑπÔ∏è  Informa√ß√µes de Produ√ß√£o - Image2Video${NC}"
    echo ""
    echo -e "${BLUE}üìã Diferen√ßas da produ√ß√£o:${NC}"
    echo "   ‚Ä¢ Frontend servido como arquivos est√°ticos"
    echo "   ‚Ä¢ Backend otimizado para produ√ß√£o"
    echo "   ‚Ä¢ Logs separados e arquivamento autom√°tico"
    echo "   ‚Ä¢ Portas diferentes (3000 frontend, 8080 backend)"
    echo ""
    echo -e "${BLUE}üèóÔ∏è  Processo de build:${NC}"
    echo "   1. Frontend: npm run build (gera dist/)"
    echo "   2. Backend: copia arquivos + ambiente virtual"
    echo "   3. Cria scripts de inicializa√ß√£o"
    echo "   4. Configura servidor web (Apache/Nginx)"
    echo ""
    echo -e "${BLUE}üöÄ Portas de produ√ß√£o:${NC}"
    echo -e "   ${GREEN}Frontend:${NC} 3000 (HTTP server est√°tico)"
    echo -e "   ${GREEN}Backend:${NC}  8080 (FastAPI/Uvicorn)"
    echo ""
    echo -e "${BLUE}üìÅ Estrutura de produ√ß√£o:${NC}"
    echo "   build/"
    echo "   ‚îú‚îÄ‚îÄ backend/              # Backend com venv"
    echo "   ‚îÇ   ‚îú‚îÄ‚îÄ main.py          # FastAPI app"
    echo "   ‚îÇ   ‚îú‚îÄ‚îÄ venv/            # Ambiente virtual"
    echo "   ‚îÇ   ‚îî‚îÄ‚îÄ start-production.sh"
    echo "   ‚îú‚îÄ‚îÄ frontend/            # Build est√°tico"
    echo "   ‚îÇ   ‚îú‚îÄ‚îÄ index.html       # App React buildado"
    echo "   ‚îÇ   ‚îú‚îÄ‚îÄ assets/          # CSS, JS, imagens"
    echo "   ‚îÇ   ‚îú‚îÄ‚îÄ .htaccess        # Config Apache"
    echo "   ‚îÇ   ‚îî‚îÄ‚îÄ nginx.conf       # Config Nginx"
    echo "   ‚îî‚îÄ‚îÄ serve-frontend.sh    # Servidor HTTP"
    echo ""
    echo -e "${BLUE}üîß Configura√ß√µes de servidor web:${NC}"
    echo -e "   ${YELLOW}Apache:${NC} Use o arquivo .htaccess inclu√≠do"
    echo -e "   ${YELLOW}Nginx:${NC}  Use a configura√ß√£o nginx.conf inclu√≠da"
    echo -e "   ${YELLOW}Python:${NC} Servidor HTTP simples (desenvolvimento)"
    echo ""
    echo -e "${BLUE}üìù Logs de produ√ß√£o:${NC}"
    echo -e "   ${YELLOW}Atuais:${NC} backend-prod.log, frontend-prod.log"
    echo -e "   ${YELLOW}Arquivados:${NC} logs/archive/ (mant√©m √∫ltimos 10)"
    echo ""
    echo -e "${BLUE}‚ö†Ô∏è  Considera√ß√µes de produ√ß√£o real:${NC}"
    echo "   ‚Ä¢ Configure SSL/HTTPS"
    echo "   ‚Ä¢ Use servidor web profissional (Nginx/Apache)"
    echo "   ‚Ä¢ Configure firewall e seguran√ßa"
    echo "   ‚Ä¢ Implemente backup e monitoramento"
    echo "   ‚Ä¢ Configure vari√°veis de ambiente adequadas"
    echo "   ‚Ä¢ Use gerenciador de processos (PM2, systemd)"
    echo ""
    echo -e "${YELLOW}Pressione Enter para continuar...${NC}"
    read
}

# Fun√ß√£o para alternar para desenvolvimento
switch_to_development() {
    show_header
    echo -e "${YELLOW}üîÑ Alternando para ambiente de desenvolvimento...${NC}"
    echo ""
    SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
    echo -e "${BLUE}Parando ambiente de produ√ß√£o...${NC}"
    "$SCRIPT_DIR/stop-prod.sh"
    echo ""
    echo -e "${GREEN}Iniciando ambiente de desenvolvimento...${NC}"
    "$SCRIPT_DIR/start-dev.sh"
    echo ""
    echo -e "${GREEN}‚úÖ Alternado para ambiente de desenvolvimento!${NC}"
    echo ""
    echo -e "${BLUE}Para gerenciar desenvolvimento:${NC}"
    echo -e "   ${GREEN}$SCRIPT_DIR/dev-manager.sh${NC}"
    echo ""
    echo -e "${YELLOW}Pressione Enter para continuar...${NC}"
    read
}

# Fun√ß√£o principal do menu
main_menu() {
    while true; do
        show_header
        show_menu
        
        read choice
        
        case $choice in
            1)
                build_production
                ;;
            2)
                start_production
                ;;
            3)
                stop_production
                ;;
            4)
                check_production_status
                ;;
            5)
                show_production_logs
                ;;
            6)
                show_useful_commands
                ;;
            7)
                show_production_info
                ;;
            8)
                switch_to_development
                ;;
            0)
                show_header
                echo -e "${GREEN}üëã Obrigado por usar o Image2Video Production Manager!${NC}"
                echo ""
                exit 0
                ;;
            *)
                show_header
                echo -e "${RED}‚ùå Op√ß√£o inv√°lida. Tente novamente.${NC}"
                echo ""
                echo -e "${YELLOW}Pressione Enter para continuar...${NC}"
                read
                ;;
        esac
    done
}

# Verificar se o script est√° sendo executado diretamente
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    # Verificar se est√° sendo executado com argumentos para modo n√£o-interativo
    if [ $# -gt 0 ]; then
        SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
        case $1 in
            build|1)
                "$SCRIPT_DIR/build-prod.sh"
                ;;
            start|2)
                "$SCRIPT_DIR/start-prod.sh"
                ;;
            stop|3)
                "$SCRIPT_DIR/stop-prod.sh"
                ;;
            status|4)
                "$SCRIPT_DIR/status-prod.sh"
                ;;
            *)
                echo -e "${RED}‚ùå Argumento inv√°lido: $1${NC}"
                echo -e "${YELLOW}Uso: $0 [build|start|stop|status]${NC}"
                exit 1
                ;;
        esac
    else
        # Modo interativo
        main_menu
    fi
fi
